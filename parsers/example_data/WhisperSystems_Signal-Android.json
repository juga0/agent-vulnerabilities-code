[{"body": "[In light of the recent news of the Android flaw via the Stagefright hack](http://www.npr.org/sections/alltechconsidered/2015/07/27/426613020/major-flaw-in-android-phones-would-let-hackers-in-with-just-a-text), one immediate way to mitigate risk is to disable auto-downloading of MMS. However, there is no way in the app right now to disable auto-downloading.", "labels": [], "locked": true, "title": "Stagefright Vulnerability: No way to disable auto-downloading of MMS", "url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/3817", "labels_url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/3817/labels{/name}", "created_at": "2015-07-27T18:37:07Z", "events_url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/3817/events", "comments_url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/3817/comments", "html_url": "https://github.com/WhisperSystems/Signal-Android/issues/3817", "comments": 18, "number": 3817, "updated_at": "2015-11-09T22:32:44Z", "assignee": null, "state": "closed", "score": 0.020929618, "user": {"following_url": "https://api.github.com/users/acconrad/following{/other_user}", "events_url": "https://api.github.com/users/acconrad/events{/privacy}", "organizations_url": "https://api.github.com/users/acconrad/orgs", "url": "https://api.github.com/users/acconrad", "gists_url": "https://api.github.com/users/acconrad/gists{/gist_id}", "html_url": "https://github.com/acconrad", "subscriptions_url": "https://api.github.com/users/acconrad/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/422184?v=3", "repos_url": "https://api.github.com/users/acconrad/repos", "received_events_url": "https://api.github.com/users/acconrad/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/acconrad/starred{/owner}{/repo}", "site_admin": false, "login": "acconrad", "type": "User", "id": 422184, "followers_url": "https://api.github.com/users/acconrad/followers"}, "milestone": null, "repository_url": "https://api.github.com/repos/WhisperSystems/Signal-Android", "closed_at": "2015-07-27T18:39:43Z", "id": 97527299}, {"body": "Hi\r\n[AndroBugs](https://github.com/AndroBugs/AndroBugs_Framework) is a tool to automatically check an apk for possible vulnerabilities. I used it to check a debug build of Signal and this is the output.\r\nMost of it is harmless, but some issues can be easily addressed (eg. change the urls to share signal with friends from http to https).\r\nI thought this might be somewhat helpful, since I could not find a similar issue here on github (even when AndroBugs is just a collection of scripts).\r\n\r\n```\r\n[Critical] <Command> Runtime Command Checking:\r\n           This app is using critical function 'Runtime.getRuntime().exec(\"...\")'.\r\n           Please confirm these following code secions are not harmful:\r\n               => Lorg/whispersystems/libpastelog/SubmitLogFragment;->grabLogcat()Ljava/lang/String; (0xc) --->\r\n                    Ljava/lang/Runtime;->exec(Ljava/lang/String;)Ljava/lang/Process;\r\n[Critical] <Implicit_Intent> Implicit Service Checking:\r\n           To ensure your app is secure, always use an explicit intent when starting a Service and DO NOT declare intent filters for your\r\n           services. Using an implicit intent to start a service is a security hazard because you cannot be certain what service will\r\n           respond to the intent, and the user cannot see which service starts.\r\n           Reference: http://developer.android.com/guide/components/intents-filters.html#Types\r\n               => org.thoughtcrime.securesms.service.AccountAuthenticatorService\r\n[Critical] <SSL_Security> SSL Connection Checking:\r\n           URLs that are NOT under SSL (Total:9):\r\n               http://127.0.0.1:%d/%s\r\n                   => Lorg/thoughtcrime/securesms/audio/AudioAttachmentServer;->getUri()Landroid/net/Uri;\r\n               http://magic.google.com\r\n                   => Lorg/thoughtcrime/securesms/mms/LegacyMmsConnection$2;-><init>(Lorg/thoughtcrime/securesms/mms/LegacyMmsConnection;\r\n                    Ljava/lang/String;)V\r\n               http://plus.google.com/\r\n                   => Lcom/google/android/gms/common/internal/zzn;-><clinit>()V\r\n               http://sgnl.link/1KpeYmF\r\n                   => Lorg/thoughtcrime/securesms/InviteActivity;->initializeResources()V\r\n               http://sgnl.link/1LoIMUl\r\n                   => Lorg/thoughtcrime/securesms/ConversationActivity;->handleInviteLink()V\r\n               http://sgnl.link/1MF56H1\r\n                   => Lorg/thoughtcrime/securesms/ConversationActivity;->handleInviteLink()V\r\n               http://support.whispersystems.org\r\n                   => Lorg/thoughtcrime/securesms/ConversationListActivity;->handleHelp()V\r\n               http://www.google.com/oha/rdf/ua-profile-kila.xml\r\n                   => Lorg/thoughtcrime/securesms/mms/LegacyMmsConnection$2;-><init>(Lorg/thoughtcrime/securesms/mms/LegacyMmsConnection;\r\n                    Ljava/lang/String;)V\r\n               http://xmlpull.org/v1/doc/features.html#process-namespaces\r\n                   => Lorg/thoughtcrime/securesms/database/XmlBackup;-><init>(Ljava/lang/String;)V\r\n[Warning]  External Storage Accessing:\r\n           External storage access found (Remember DO NOT write important files to external storages):\r\n               => Lorg/thoughtcrime/securesms/database/EncryptedBackupExporter;->getExportDirectoryPath()Ljava/lang/String; (0x0) --->\r\n                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/database/EncryptedBackupExporter;->verifyExternalStorageForExport()V (0x0) --->\r\n                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/database/EncryptedBackupExporter;->verifyExternalStorageForImport()V (0x0) --->\r\n                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/database/PlaintextBackupExporter;->getPlaintextExportDirectoryPath()Ljava/lang/String; (0x0)\r\n                    ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/database/PlaintextBackupExporter;->verifyExternalStorageForPlaintextExport()V (0x0) --->\r\n                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/database/PlaintextBackupImporter;->getPlaintextExportDirectoryPath()Ljava/lang/String; (0x0)\r\n                    ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/database/PlaintextBackupImporter;->verifyExternalStorageForPlaintextImport()V (0x0) --->\r\n                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/util/SaveAttachmentTask;->constructOutputFile(Ljava/lang/String; J)Ljava/io/File; (0x0) --->\r\n                    Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n               => Lorg/thoughtcrime/securesms/util/SaveAttachmentTask;->doInBackground([Lorg/thoughtcrime/securesms/util/SaveAttachmentTask$\r\n                    Attachment;)Ljava/lang/Integer; (0x4a) ---> Landroid/os/Environment;->getExternalStorageDirectory()Ljava/io/File;\r\n[Warning]  AndroidManifest Exported Components Checking:\r\n           Found \"exported\" components(except for Launcher) for receiving outside applications' actions (AndroidManifest.xml).\r\n           These components can be initilized by other apps. You should add or modify the attribute to [exported=\"false\"] if you don't want\r\n           to.\r\n           You can also protect it with a customized permission with \"signature\" or higher protectionLevel and specify in\r\n           \"android:permission\" attribute.\r\n                 receiver => org.thoughtcrime.securesms.service.SmsDeliveryListener\r\n                 receiver => org.thoughtcrime.securesms.notifications.MarkReadReceiver\r\n                 receiver => org.thoughtcrime.securesms.service.DirectoryRefreshListener\r\n                 receiver => org.thoughtcrime.securesms.notifications.MessageNotifier$ReminderReceiver\r\n                 receiver => org.thoughtcrime.securesms.notifications.MessageNotifier$DeleteReceiver\r\n[Warning]  Codes for Sending SMS:\r\n           This app has code for sending SMS messages (sendDataMessage, sendMultipartTextMessage or sendTextMessage):\r\n               => Lorg/thoughtcrime/securesms/jobs/SmsSendJob;->deliver(Lorg/thoughtcrime/securesms/database/model/SmsMessageRecord;)V\r\n                    (0x10a) ---> Landroid/telephony/SmsManager;->sendMultipartTextMessage(Ljava/lang/String; Ljava/lang/String;\r\n                    Ljava/util/ArrayList; Ljava/util/ArrayList; Ljava/util/ArrayList;)V\r\n               => Lorg/thoughtcrime/securesms/jobs/SmsSendJob;->deliver(Lorg/thoughtcrime/securesms/database/model/SmsMessageRecord;)V\r\n                    (0x1ca) ---> Landroid/telephony/SmsManager;->sendTextMessage(Ljava/lang/String; Ljava/lang/String; Ljava/lang/String;\r\n                    Landroid/app/PendingIntent; Landroid/app/PendingIntent;)V\r\n[Warning] <SSL_Security> SSL Certificate Verification Checking:\r\n           Please make sure this app has the conditions to check the validation of SSL Certificate. If it's not properly checked, it MAY\r\n           allows self-signed, expired or mismatch CN certificates for SSL connection.\r\n           This is a critical vulnerability and allows attackers to do MITM attacks without your knowledge.\r\n           If you are transmitting users' username or password, these sensitive information may be leaking.\r\n           Reference:\r\n           (1)OWASP Mobile Top 10 doc: https://www.owasp.org/index.php/Mobile_Top_10_2014-M3\r\n           (2)Android Security book: http://goo.gl/BFb65r\r\n           (3)https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=134807561\r\n           This vulnerability is much more severe than Apple's \"goto fail\" vulnerability: http://goo.gl/eFlovw\r\n           Please do not try to create a \"X509Certificate\" and override \"checkClientTrusted\", \"checkServerTrusted\", and \"getAcceptedIssuers\"\r\n           functions with blank implementation.\r\n           We strongly suggest you use the existing API instead of creating your own X509Certificate class.\r\n           Please modify or remove these vulnerable code:\r\n               --------------------------------------------------\r\n               [Maybe Vulnerable (Please manually confirm)]\r\n               => Lorg/whispersystems/textsecure/internal/util/BlacklistingTrustManager;\r\n                     -> used by: Lorg/whispersystems/textsecure/internal/util/BlacklistingTrustManager;->createFor([Ljavax/net/ssl/TrustMana\r\n                    ger;)[Ljavax/net/ssl/TrustManager;\r\n[Notice] <Database><#CVE-2011-3901#> Android SQLite Databases Vulnerability Checking:\r\n           This app is using Android SQLite databases.\r\n           Prior to Android 4.0, Android has SQLite Journal Information Disclosure Vulnerability.\r\n           But it can only be solved by users upgrading to Android > 4.0 and YOU CANNOT SOLVE IT BY YOURSELF (But you can use encrypt your\r\n           databases and Journals by \"SQLCipher\" or other libs).\r\n           Proof-Of-Concept Reference:\r\n           (1) http://blog.watchfire.com/files/androidsqlitejournal.pdf\r\n           (2) http://www.youtube.com/watch?v=oCXLHjmH5rY\r\n[Notice]  File Unsafe Delete Checking:\r\n           Everything you delete may be recovered by any user or attacker, especially rooted devices.\r\n           Please make sure do not use \"file.delete()\" to delete essential files.\r\n           Check this video: https://www.youtube.com/watch?v=tGw1fxUD-uY\r\n               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->deleteIfExists(Ljava/io/File;)V (0xc) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->open(Ljava/io/File; I I J)Lcom/bumptech/glide/disklrucache/DiskLruCache;\r\n                    (0x64) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->rebuildJournal()V (0x1ba) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/bumptech/glide/disklrucache/DiskLruCache;->remove(Ljava/lang/String;)Z (0x76) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/bumptech/glide/disklrucache/Util;->deleteContents(Ljava/io/File;)V (0x5c) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/squareup/okhttp/internal/DiskLruCache;->deleteIfExists(Ljava/io/File;)V (0x0) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/squareup/okhttp/internal/DiskLruCache;->rebuildJournal()V (0x182) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/squareup/okhttp/internal/DiskLruCache;->initialize()V (0x24) ---> Ljava/io/File;->delete()Z\r\n               => Lcom/squareup/okhttp/internal/Util;->deleteContents(Ljava/io/File;)V (0x5c) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/DatabaseUpgradeActivity$DatabaseUpgradeTask;->doInBackground([Ljava/lang/Integer;)Ljava/lang/V\r\n                    oid; (0xca) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/DatabaseUpgradeActivity$DatabaseUpgradeTask;->doInBackground([Ljava/lang/Integer;)Ljava/lang/V\r\n                    oid; (0xd6) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/crypto/storage/TextSecurePreKeyStore;->removePreKey(I)V (0x8) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/crypto/storage/TextSecurePreKeyStore;->removeSignedPreKey(I)V (0x8) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/crypto/storage/TextSecureSessionStore;->deleteSession(Lorg/whispersystems/libaxolotl/AxolotlAd\r\n                    dress;)V (0x8) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/database/AttachmentDatabase;->deleteAllAttachments()V (0x3c) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/database/AttachmentDatabase;->deleteAttachmentsForMessage(J)V (0xae) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/database/AttachmentDatabase;->deleteAttachmentsForMessage(J)V (0xca) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/database/AttachmentDatabase;->insertAttachmentsForPlaceholder(Lorg/thoughtcrime/securesms/cryp\r\n                    to/MasterSecret; J Lorg/thoughtcrime/securesms/attachments/AttachmentId; Ljava/io/InputStream;)J (0xb2) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/database/DatabaseFactory;->onApplicationLevelUpgrade(Landroid/content/Context;\r\n                    Lorg/thoughtcrime/securesms/crypto/MasterSecret; I\r\n                    Lorg/thoughtcrime/securesms/DatabaseUpgradeActivity$DatabaseUpgradeListener;)V (0x94c) ---> Ljava/io/File;->delete()Z\r\n               =>\r\n                    Lorg/thoughtcrime/securesms/jobs/AttachmentDownloadJob;->retrieveAttachment(Lorg/thoughtcrime/securesms/crypto/MasterSec\r\n                    ret; J Lorg/thoughtcrime/securesms/attachments/AttachmentId; Lorg/thoughtcrime/securesms/attachments/Attachment;)V\r\n                    (0x44) ---> Ljava/io/File;->delete()Z\r\n               =>\r\n                    Lorg/thoughtcrime/securesms/jobs/AttachmentDownloadJob;->retrieveAttachment(Lorg/thoughtcrime/securesms/crypto/MasterSec\r\n                    ret; J Lorg/thoughtcrime/securesms/attachments/AttachmentId; Lorg/thoughtcrime/securesms/attachments/Attachment;)V\r\n                    (0x64) ---> Ljava/io/File;->delete()Z\r\n               =>\r\n                    Lorg/thoughtcrime/securesms/jobs/AttachmentDownloadJob;->retrieveAttachment(Lorg/thoughtcrime/securesms/crypto/MasterSec\r\n                    ret; J Lorg/thoughtcrime/securesms/attachments/AttachmentId; Lorg/thoughtcrime/securesms/attachments/Attachment;)V\r\n                    (0x74) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/AvatarDownloadJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V (0x4a) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/AvatarDownloadJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V (0x86) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/AvatarDownloadJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V (0x9e) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/AvatarDownloadJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V (0xac) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/MultiDeviceContactUpdateJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V\r\n                    (0xba) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/MultiDeviceContactUpdateJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V\r\n                    (0xd2) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/MultiDeviceGroupUpdateJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V\r\n                    (0x96) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/jobs/MultiDeviceGroupUpdateJob;->onRun(Lorg/thoughtcrime/securesms/crypto/MasterSecret;)V\r\n                    (0xd8) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/providers/MmsBodyProvider;->delete(Landroid/net/Uri; Ljava/lang/String; [Ljava/lang/String;)I\r\n                    (0x1e) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/providers/PartProvider;->openFile(Landroid/net/Uri;\r\n                    Ljava/lang/String;)Landroid/os/ParcelFileDescriptor; (0x8a) ---> Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/providers/PersistentBlobProvider;->delete(Landroid/net/Uri;)Z (0x24) --->\r\n                    Ljava/io/File;->delete()Z\r\n               => Lorg/thoughtcrime/securesms/providers/PersistentBlobProvider;->delete(Landroid/net/Uri;)Z (0x58) --->\r\n                    Ljava/io/File;->delete()Z\r\n[Notice] <KeyStore><Hacker> KeyStore Protection Information:\r\n           The Keystores below are \"protected\" by password and seem using SSL-pinning (Total: 3). You can use \"Portecle\" tool to manage the\r\n           certificates in the KeyStore:\r\n               => Lorg/thoughtcrime/redphone/signaling/RedPhoneAccountManager;->getTrustManager(Lorg/whispersystems/textsecure/api/push/Trus\r\n                    tStore;)[Ljavax/net/ssl/TrustManager; (0x24) ---> Ljava/security/KeyStore;->load(Ljava/io/InputStream; [C)V\r\n               => Lorg/thoughtcrime/redphone/signaling/SignalingSocket;->getTrustManager(Lorg/whispersystems/textsecure/api/push/TrustStore;\r\n                    )[Ljavax/net/ssl/TrustManager; (0x24) ---> Ljava/security/KeyStore;->load(Ljava/io/InputStream; [C)V\r\n               => Lorg/whispersystems/textsecure/internal/util/BlacklistingTrustManager;->createFor(Lorg/whispersystems/textsecure/api/push/\r\n                    TrustStore;)[Ljavax/net/ssl/TrustManager; (0x24) ---> Ljava/security/KeyStore;->load(Ljava/io/InputStream; [C)V\r\n[Notice] <Signature><Hacker> Getting Signature Code Checking:\r\n           This app has code checking the package signature in the code. It might be used to check for whether the app is hacked by the\r\n           attackers.\r\n               => Lcom/google/android/gms/common/GooglePlayServicesUtil;->isGooglePlayServicesAvailable(Landroid/content/Context;)I (0x54)\r\n                    ---> Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String; I)Landroid/content/pm/PackageInfo;\r\n[Notice]  Native Library Loading Checking:\r\n           Native library loading codes(System.loadLibrary(...)) found:\r\n               [libredphone-audio.so]\r\n               => Lorg/thoughtcrime/redphone/audio/CallAudioManager;-><clinit>()V (0x14) --->\r\n                    Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V\r\n               [libcurve25519.so]\r\n               => Lorg/whispersystems/curve25519/NativeCurve25519Provider;-><clinit>()V (0x10) --->\r\n                    Ljava/lang/System;->loadLibrary(Ljava/lang/String;)V\r\n[Notice]  AndroidManifest Exported Components Checking 2:\r\n           Found \"exported\" components(except for Launcher) for receiving Google's \"Android\" actions (AndroidManifest.xml):\r\n                 activity => org.thoughtcrime.securesms.DeviceProvisioningActivity\r\n                 activity => org.thoughtcrime.securesms.ShareActivity\r\n                 activity => org.thoughtcrime.securesms.ConversationListActivity\r\n                 activity => org.thoughtcrime.securesms.SmsSendtoActivity\r\n                 activity => org.thoughtcrime.redphone.RedPhoneShare\r\n                  service => org.thoughtcrime.securesms.service.AccountAuthenticatorService\r\n                  service => org.thoughtcrime.securesms.service.ContactsSyncAdapterService\r\n                 receiver => org.thoughtcrime.securesms.ExperienceUpgradeActivity$AppUpgradeReceiver\r\n\r\n``", "labels": [], "locked": false, "title": "Addressing some possible insecurities listed by AndroBugs", "url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/5207", "labels_url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/5207/labels{/name}", "created_at": "2016-02-10T21:42:44Z", "events_url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/5207/events", "comments_url": "https://api.github.com/repos/WhisperSystems/Signal-Android/issues/5207/comments", "html_url": "https://github.com/WhisperSystems/Signal-Android/issues/5207", "comments": 0, "number": 5207, "updated_at": "2016-02-10T21:50:37Z", "assignee": null, "state": "open", "score": 0.25116244, "user": {"following_url": "https://api.github.com/users/vanitasvitae/following{/other_user}", "events_url": "https://api.github.com/users/vanitasvitae/events{/privacy}", "organizations_url": "https://api.github.com/users/vanitasvitae/orgs", "url": "https://api.github.com/users/vanitasvitae", "gists_url": "https://api.github.com/users/vanitasvitae/gists{/gist_id}", "html_url": "https://github.com/vanitasvitae", "subscriptions_url": "https://api.github.com/users/vanitasvitae/subscriptions", "avatar_url": "https://avatars.githubusercontent.com/u/7854206?v=3", "repos_url": "https://api.github.com/users/vanitasvitae/repos", "received_events_url": "https://api.github.com/users/vanitasvitae/received_events", "gravatar_id": "", "starred_url": "https://api.github.com/users/vanitasvitae/starred{/owner}{/repo}", "site_admin": false, "login": "vanitasvitae", "type": "User", "id": 7854206, "followers_url": "https://api.github.com/users/vanitasvitae/followers"}, "milestone": null, "repository_url": "https://api.github.com/repos/WhisperSystems/Signal-Android", "closed_at": null, "id": 132825453}]